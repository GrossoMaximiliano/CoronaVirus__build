{"version":3,"sources":["components/MyCard.js","components/Cards.js","components/Map.js","components/Selector.js","components/CovidApp.js","hooks/useFetch.js","App.js","reportWebVitals.js","index.js"],"names":["MyCard","Titulo","Cantidad","Abreviatura","isBandera","mycolor","Color","url_bandera","className","src","alt","Cards","data","toFixed","MyMap","setActualCountry","locationClassName","map","World","onLocationClick","e","name","target","getAttribute","SelectorPaises","updateCountry","textContent","onClick","Object","values","x","All","country","CovidApp","useState","countrys","setCountrys","actualCountry","dataLoaded","setDataLoaded","err","url","setData","error","setError","isPending","setIsPending","useEffect","a","fetch","res","ok","Error","json","get","useFetch","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4b9b755.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function MyCard ({Titulo, Cantidad, Abreviatura, isBandera, Color})\r\n{\r\n    let mycolor = \"amount \" + (Color || \"\");\r\n    let url_bandera = `https://www.countryflags.io/${Abreviatura}/shiny/64.png`;\r\n\r\n    if ( Abreviatura === \"globalFlag\" ) url_bandera = \"./img/global.jpg\";\r\n\r\n    return <>\r\n        <article className=\"item\">\r\n            {\r\n            isBandera === true\r\n            ?\r\n            <div className=\"bandera\">\r\n                <img src={url_bandera} alt={Titulo}/>\r\n            </div>\r\n            : \r\n               <>\r\n                <h1 className=\"titulo\">{Titulo}</h1>\r\n                <h1 className={mycolor}>{Cantidad}</h1>\r\n               </> \r\n            }\r\n\r\n        </article>\r\n    </>;\r\n}","import React from 'react';\r\nimport MyCard from './MyCard';\r\n\r\nexport default function Cards({data})\r\n{\r\n\r\n    const calcPorcentaje = ()=>\r\n    {\r\n        let resultado = (data[\"deaths\"] / data[\"confirmed\"] ) * 100;\r\n        return resultado.toFixed(2) +\"%\";\r\n    }\r\n\r\n    return <>\r\n        <section className=\"cards\">\r\n            <MyCard Titulo='none' Cantidad='0' Abreviatura={data[\"abbreviation\"] || \"globalFlag\"} isBandera={true} Color=''></MyCard>\r\n            <MyCard Titulo='Confirmados' Cantidad={data[\"confirmed\"]} Abreviatura='' isBandera='false' Color='orange'></MyCard>\r\n            <MyCard Titulo='Recuperados' Cantidad={data[\"recovered\"]} Abreviatura='' isBandera='false' Color='green'></MyCard>\r\n            <MyCard Titulo='Muertes' Cantidad={data[\"deaths\"]} Abreviatura='' isBandera='false' Color='red'></MyCard>\r\n            <MyCard Titulo='Letalidad' Cantidad={calcPorcentaje()} Abreviatura='' isBandera='false' Color='red'></MyCard>\r\n        </section>\r\n    </>;\r\n}","import React from 'react';\r\nimport { SVGMap } from \"react-svg-map\";\r\nimport \"react-svg-map/lib/index.css\";\r\nimport World from \"@svg-maps/world\";\r\n\r\nexport default function MyMap({data, setActualCountry})\r\n{\r\n    return <>\r\n        <article className=\"map\">\r\n            <SVGMap className=\"map\" locationClassName=\"svgmap\" map={World} onLocationClick={ (e) => {\r\n                let name = ( e.target.getAttribute(\"name\") === \"United States\" ? \"US\" : e.target.getAttribute(\"name\") );\r\n                if ( !data[name] ) name = \"Global\";\r\n                setActualCountry(name);\r\n            }} />;\r\n        </article>\r\n    </>;\r\n} ","import React from 'react';\r\n\r\nexport default function SelectorPaises({data, setActualCountry})\r\n{\r\n\r\n    const updateCountry = (e) => {\r\n        setActualCountry(e.target.textContent )\r\n    }\r\n    \r\n\r\n    return <>\r\n        <article className=\"casospaises\">\r\n        <h2>Selecciona un pais para ver su respectiva informaci√≥n sobre el <label className=\"red\">Coronavirus</label></h2>\r\n            <ul>\r\n                <li key=\"Global\"><button onClick={updateCountry} >Global</button><br/></li>\r\n                {\r\n                    Object.values(data).map(x => x.All.country ? <li key={x.All.country}><button onClick={updateCountry}>{x.All.country}</button><br/></li> : null )\r\n                }\r\n\r\n            </ul>\r\n        </article>\r\n    </>\r\n} ","import React, { useState, useEffect } from 'react';\r\nimport {useFetch} from '../hooks/useFetch';\r\nimport Cards from './Cards';\r\nimport MyMap from './Map';\r\nimport SelectorPaises from './Selector';\r\n\r\nexport default function CovidApp()\r\n{\r\n    const [ countrys, setCountrys ] = useState( [] )\r\n    const [ actualCountry, setActualCountry ] = useState('Global')\r\n    const [ dataLoaded, setDataLoaded ] = useState(false);\r\n    const [ err, setErr ] = useState(null)\r\n\r\n    const data = useFetch(\"https://covid-api.mmediagroup.fr/v1/cases\"); \r\n\r\n    \r\n    useEffect( () => {\r\n       if ( !data.isPending )\r\n       {    \r\n           setCountrys(data.data);\r\n           setDataLoaded(true);\r\n       }\r\n    }, [data, countrys])\r\n\r\n\r\n     return (\r\n        <>\r\n            {dataLoaded && !err ?\r\n            <>\r\n                <Cards data={countrys[actualCountry][\"All\"]} />\r\n                <section className=\"container\">\r\n                    <SelectorPaises data={countrys} setActualCountry={setActualCountry} />\r\n                    <MyMap data={countrys} setActualCountry={setActualCountry}/>\r\n                </section>\r\n            </>\r\n            :\r\n            <div className=\"loadcenter\">\r\n                <div className=\"loader\"></div>\r\n            </div>\r\n            \r\n            }\r\n        </>\r\n     );\r\n}","import { useState, useEffect } from 'react';\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const [data, setData ] = useState(null);\r\n    const [error, setError ] = useState(null);\r\n    const [isPending, setIsPending ] = useState(true);\r\n\r\n    useEffect( () => {\r\n        const get = async () => {\r\n            try \r\n            {\r\n                const res = await fetch(url);\r\n                if ( !res.ok ) throw new Error(\"Fetch sin respuesta.\");\r\n                const data = await res.json();\r\n                await setData(data);\r\n                await setIsPending(false);\r\n            }\r\n            catch(e)\r\n            {\r\n                await setError(e);\r\n                await setIsPending(false);\r\n            }\r\n        };\r\n\r\n        get();\r\n        \r\n    }, [url])\r\n\r\n\r\n    return {data, error, isPending};\r\n}\r\n\r\n\r\n","import './App.css';\nimport CovidApp from './components/CovidApp';\n//https://covid-api.mmediagroup.fr/v1/cases?country=Argentina\n//https://www.countryflags.io/ar/flat/64.png\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\n        <CovidApp></CovidApp>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}